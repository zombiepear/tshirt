name: Generate T-Shirt Design

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 10 * * *'

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        pip install openai==1.12.0 requests==2.31.0 Pillow==10.0.0
        python -c "import openai; print(f'OpenAI version: {openai.__version__}')"
    
    - name: Create designs directory
      run: mkdir -p designs
    
    - name: Run T-Shirt Generator
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        PRINTFUL_API_KEY: ${{ secrets.PRINTFUL_API_KEY }}
        PRINTFUL_STORE_ID: ${{ secrets.PRINTFUL_STORE_ID }}
        MARKUP_PERCENT: ${{ secrets.MARKUP_PERCENT }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_PAGES_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
      run: |
        echo "🎨 Generating T-Shirt Design..."
        python generate_tee.py
    
    - name: Commit and push designs
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check what files were generated
        echo "📁 Generated files:"
        ls -la designs/
        
        # Add all generated files
        git add designs/*.png designs/*.json || true
        git add *.log || true
        
        # Commit and push
        if git diff --staged --quiet; then
          echo "No new files to commit"
        else
          git commit -m "🎨 Add T-shirt design from run ${{ github.run_number }}"
          git push
        fi
    
    - name: Create gallery page
      run: |
        # Create a simple gallery index
        cat > index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>T-Shirt Designs by zombiepear</title>
            <meta charset="utf-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <style>
                body {
                    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
                    line-height: 1.6;
                    color: #333;
                    max-width: 1200px;
                    margin: 0 auto;
                    padding: 20px;
                    background: #f5f5f5;
                }
                h1 { color: #2c3e50; margin-bottom: 10px; }
                .subtitle { color: #7f8c8d; margin-bottom: 30px; }
                .gallery {
                    display: grid;
                    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
                    gap: 20px;
                    margin-top: 30px;
                }
                .design-card {
                    background: white;
                    border-radius: 8px;
                    overflow: hidden;
                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                    transition: transform 0.3s ease;
                }
                .design-card:hover {
                    transform: translateY(-5px);
                    box-shadow: 0 5px 20px rgba(0,0,0,0.15);
                }
                .design-card img {
                    width: 100%;
                    height: 300px;
                    object-fit: cover;
                }
                .design-info {
                    padding: 15px;
                }
                .design-title {
                    font-weight: 600;
                    margin-bottom: 5px;
                }
                .design-date {
                    color: #7f8c8d;
                    font-size: 0.9em;
                }
                .loading {
                    text-align: center;
                    padding: 50px;
                    color: #7f8c8d;
                }
                .error {
                    background: #fee;
                    color: #c33;
                    padding: 20px;
                    border-radius: 5px;
                    margin: 20px 0;
                }
                footer {
                    margin-top: 50px;
                    padding-top: 20px;
                    border-top: 1px solid #e0e0e0;
                    text-align: center;
                    color: #7f8c8d;
                }
                a { color: #3498db; text-decoration: none; }
                a:hover { text-decoration: underline; }
            </style>
        </head>
        <body>
            <h1>🎨 T-Shirt Design Gallery</h1>
            <p class="subtitle">AI-generated designs updated daily via GitHub Actions</p>
            
            <div id="loading" class="loading">Loading designs...</div>
            <div id="gallery" class="gallery" style="display: none;"></div>
            <div id="error" class="error" style="display: none;"></div>
            
            <footer>
                <p>Generated with DALL-E 3 • Hosted on GitHub Pages • <a href="https://github.com/zombiepear/tshirt">View on GitHub</a></p>
            </footer>
            
            <script>
                async function loadDesigns() {
                    const gallery = document.getElementById('gallery');
                    const loading = document.getElementById('loading');
                    const errorDiv = document.getElementById('error');
                    
                    try {
                        // Fetch the designs directory
                        const response = await fetch('designs/');
                        
                        if (!response.ok) {
                            throw new Error('Could not load designs directory');
                        }
                        
                        const html = await response.text();
                        
                        // Parse the directory listing
                        const parser = new DOMParser();
                        const doc = parser.parseFromString(html, 'text/html');
                        const links = Array.from(doc.querySelectorAll('a'));
                        
                        // Filter for PNG files
                        const designs = links
                            .filter(link => link.href.endsWith('.png'))
                            .map(link => {
                                const filename = link.textContent;
                                const match = filename.match(/(.+?)_(\d{8})_(\d{6})\.png/);
                                
                                return {
                                    url: link.href,
                                    filename: filename,
                                    collection: match ? match[1] : 'design',
                                    date: match ? match[2] : 'unknown',
                                    time: match ? match[3] : ''
                                };
                            })
                            .reverse(); // Show newest first
                        
                        if (designs.length === 0) {
                            errorDiv.textContent = 'No designs found yet. They will appear here after generation!';
                            errorDiv.style.display = 'block';
                            loading.style.display = 'none';
                            return;
                        }
                        
                        // Create gallery cards
                        designs.forEach(design => {
                            const card = document.createElement('div');
                            card.className = 'design-card';
                            
                            const dateStr = design.date !== 'unknown' 
                                ? `${design.date.slice(0,4)}-${design.date.slice(4,6)}-${design.date.slice(6,8)}`
                                : 'Date unknown';
                            
                            card.innerHTML = `
                                <a href="${design.url}" target="_blank">
                                    <img src="${design.url}" alt="${design.filename}" loading="lazy">
                                </a>
                                <div class="design-info">
                                    <div class="design-title">${design.collection.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}</div>
                                    <div class="design-date">${dateStr}</div>
                                </div>
                            `;
                            
                            gallery.appendChild(card);
                        });
                        
                        // Show gallery, hide loading
                        loading.style.display = 'none';
                        gallery.style.display = 'grid';
                        
                    } catch (error) {
                        console.error('Error loading designs:', error);
                        errorDiv.textContent = 'Error loading designs. Please check back later.';
                        errorDiv.style.display = 'block';
                        loading.style.display = 'none';
                    }
                }
                
                // Load designs when page loads
                loadDesigns();
            </script>
        </body>
        </html>
        EOF
        
        # Commit the gallery page
        git add index.html || true
        git commit -m "Update gallery page" || true
        git push || true
    
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: designs-${{ github.run_number }}
        path: |
          designs/
          *.log
        retention-days: 30
    
    - name: Summary
      if: always()
      run: |
        echo "## 🎨 T-Shirt Generation Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check if design was created
        if ls designs/*.png 1> /dev/null 2>&1; then
          echo "✅ **Design generated successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📁 Generated Files:" >> $GITHUB_STEP_SUMMARY
          ls -la designs/*.png | tail -1 >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **No design generated**" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "### 🌐 View Your Designs:" >> $GITHUB_STEP_SUMMARY
        echo "- **Gallery**: https://zombiepear.github.io/tshirt/" >> $GITHUB_STEP_SUMMARY
        echo "- **Designs Folder**: https://zombiepear.github.io/tshirt/designs/" >> $GITHUB_STEP_SUMMARY
        echo "- **GitHub Repo**: https://github.com/zombiepear/tshirt" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Printful Status:" >> $GITHUB_STEP_SUMMARY
        echo "Files are uploaded to Printful's library. For Shopify stores, products sync automatically through your Shopify integration." >> $GITHUB_STEP_SUMMARY
