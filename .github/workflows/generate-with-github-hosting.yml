name: Generate T-Shirt Design

on:
  push:
    branches: [ main ]
  schedule:
    # Run daily at 10 AM UTC
    - cron: '0 10 * * *'
  workflow_dispatch:
    inputs:
      category:
        description: 'Design category (leave empty for random)'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - 'gaming'
          - 'nature'
          - 'abstract'
          - 'vintage'
          - 'party'
          - 'anniversary'
          - 'british-humour'
          - 'birthday'
          - 'christmas'
          - 'summer'
          - 'winter'
          - 'memes'
          - 'fitness'
          - 'coffee'
          - 'music'
      count:
        description: 'Number of designs to generate'
        required: false
        default: '1'
      delay:
        description: 'Delay between generations (seconds)'
        required: false
        default: '5'

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  PRINTFUL_API_KEY: ${{ secrets.PRINTFUL_API_KEY }}
  PRINTFUL_STORE_ID: ${{ secrets.PRINTFUL_STORE_ID }}
  SHOPIFY_STORE: ${{ secrets.SHOPIFY_STORE }}
  SHOPIFY_ACCESS_TOKEN: ${{ secrets.SHOPIFY_ACCESS_TOKEN }}
  MARKUP_PERCENT: ${{ secrets.MARKUP_PERCENT }}

jobs:
  generate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Generate single design (automatic/scheduled)
      if: github.event_name != 'workflow_dispatch'
      run: python generate_tee.py
    
    - name: Generate designs (manual with parameters)
      if: github.event_name == 'workflow_dispatch'
      run: |
        if [ -n "${{ github.event.inputs.category }}" ]; then
          # Use bulk_generate.py for manual runs with parameters
          python bulk_generate.py \
            --category "${{ github.event.inputs.category }}" \
            --count ${{ github.event.inputs.count }} \
            --delay ${{ github.event.inputs.delay }}
        else
          # Random category generation
          python bulk_generate.py \
            --count ${{ github.event.inputs.count }} \
            --delay ${{ github.event.inputs.delay }}
        fi
    
    - name: Upload generated designs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: generated-designs-${{ github.run_number }}
        path: |
          design_*.png
          generation_log.json
        retention-days: 30
    
    - name: Upload logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: generation-logs-${{ github.run_number }}
        path: |
          *.log
          generation_log.json
        retention-days: 7
