name: Custom Prompt T-Shirt

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Your custom design prompt'
        required: true
        type: string
      style:
        description: 'Style hint (optional)'
        required: false
        type: choice
        options:
          - ''
          - 'minimalist'
          - 'vintage'
          - 'retro'
          - 'modern'
          - 'cartoon'
          - 'realistic'
          - 'abstract'
          - 'psychedelic'
          - 'watercolor'
          - 'sketch'
          - 'neon'
          - 'graffiti'
          - 'japanese'
          - 'gothic'
          - 'cute'
          - 'dark'
          - 'vibrant'
          - 'monochrome'
      count:
        description: 'Number of variations'
        required: false
        default: '1'
        type: choice
        options:
          - '1'
          - '2'
          - '3'
          - '5'
      upload:
        description: 'Upload to stores?'
        required: false
        default: false
        type: boolean

env:
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  PRINTFUL_API_KEY: ${{ inputs.upload && secrets.PRINTFUL_API_KEY || '' }}
  PRINTFUL_STORE_ID: ${{ inputs.upload && secrets.PRINTFUL_STORE_ID || '' }}
  SHOPIFY_STORE: ${{ inputs.upload && secrets.SHOPIFY_STORE || '' }}
  SHOPIFY_ACCESS_TOKEN: ${{ inputs.upload && secrets.SHOPIFY_ACCESS_TOKEN || '' }}
  MARKUP_PERCENT: ${{ secrets.MARKUP_PERCENT || '1.4' }}

jobs:
  generate-custom:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Generate custom design
      run: |
        # Build the command
        CMD="python generate_custom.py \"${{ inputs.prompt }}\""
        
        # Add style if provided
        if [ -n "${{ inputs.style }}" ]; then
          CMD="$CMD --style \"${{ inputs.style }}\""
        fi
        
        # Add count
        CMD="$CMD --count ${{ inputs.count }}"
        
        # Add upload flag if true
        if [ "${{ inputs.upload }}" = "true" ]; then
          CMD="$CMD --upload"
        fi
        
        # Execute
        eval $CMD
    
    - name: Create summary
      if: always()
      run: |
        echo "## Custom T-Shirt Design Generation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Prompt" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ inputs.prompt }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Style**: ${{ inputs.style || 'None' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Count**: ${{ inputs.count }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Upload**: ${{ inputs.upload }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Generated Designs" >> $GITHUB_STEP_SUMMARY
        
        # List generated files
        if ls design_custom_*.png 1> /dev/null 2>&1; then
          for file in design_custom_*.png; do
            echo "- ✅ $file" >> $GITHUB_STEP_SUMMARY
          done
        else
          echo "❌ No designs were generated" >> $GITHUB_STEP_SUMMARY
        fi
    
    - name: Upload designs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: custom-designs-${{ github.run_number }}
        path: |
          design_custom_*.png
          generation_log.json
        retention-days: 30
